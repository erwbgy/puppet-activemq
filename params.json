{"name":"Puppet-activemq","tagline":"","body":"# puppet-activemq\r\n\r\nPuppet module to install Apache ActiveMQ and run instances as Runit services\r\nunder one or more users.\r\n\r\nThe recommended usage is to place the configuration in hiera and just:\r\n\r\n    include activemq\r\n\r\nExample hiera config:\r\n\r\n    activemq::config:\r\n      hostname: 'localhost'\r\n\r\n    activemq::config_file: 'xbean:conf/activemq.xml'\r\n\r\n    activemq::cpu_affinity: '0,1'\r\n\r\n    activemq::files:\r\n      conf/activemq.xml:\r\n        mode:     '0440'\r\n        source:   'puppet:///files/activemq/myapp/activemq.xml'\r\n\r\n    activemq::templates:\r\n      conf/activemq-users.xml:\r\n        mode:     '0440'\r\n        template: '/var/lib/puppet/files/activemq/myapp/activemq-users.xml.erb'\r\n    \r\n    activemq::group:     'activemq'\r\n    \r\n    activemq::java_home: '/usr/java/jdk1.7.0_09'\r\n    \r\n    activemq::java_opts: '-Xms1536m -Xmx1536m -XX:MaxPermSize=512m'\r\n\r\n    activemq::jolokia_version: '1.1.1'\r\n    \r\n    activemq::version:   '5.8.0'\r\n    \r\n    activemq::instances:\r\n      activemq1:\r\n        basedir:      '/apps/activemq1'\r\n        config:\r\n          hostname:   %{ipaddress_eth0_1}\r\n        logdir:       '/apps/activemq1/logs'\r\n        jolokia:         'true'\r\n        jolokia_address: %{ipaddress_eth0_1}\r\n        jolokia_port:    '8778'\r\n      activemq2:\r\n        basedir:      '/apps/activemq2'\r\n        logdir:       '/apps/activemq2/logs'\r\n\r\n## activemq parameters\r\n\r\n*basedir*: The base installation directory. Default: '/opt/activemq'\r\n\r\n*config*: A hash of additional configuration variables that will be set\r\nwhen templates are processed.\r\n\r\n*config_file*: The configuration file to use. Default: 'xbean:conf/activemq.xml'\r\n\r\n*cpu_affinity*: Enable CPU affinity to be set to only run processes on specific\r\nCPU cores - for example '0,1' to only run processes on the first two cores.\r\n\r\n*files*: A hash of configuration files to install - see below\r\n\r\n*group*: The user''s primary group. Default: 'activemq',\r\n\r\n*java_home*: The base directory of the JDK installation to be used. Default:\r\n'/usr/java/latest',\r\n\r\n*java_opts*: Additional java command-line options to pass to the startup script\r\n\r\n*jolokia*: Whether or not to install the jolokia war file and configure a\r\nseparate service to run it. Default: false\r\n\r\n*jolokia_address*: The address that the jolokia HTTP service listens on.\r\nDefault: 'localhost'\r\n\r\n*jolokia_port*: The port that the jolokia HTTP service listens on. Default:\r\n'8778'\r\n\r\n*logdir*: The base log directory. Default: '/var/logs/activemq'\r\n\r\n*min_mem*: The minimum heap size allocated by the JVM. Default: 1024m\r\n\r\n*max_mem*: The maximum heap size allocated by the JVM. Default: 2048m\r\n\r\n*mode*: The permissions to create files with (eg. 0444).\r\n\r\n*templates*: A hash of configuration templates to process and install - see below\r\n\r\n*version*: The version of the product to install (eg. 5.8.0). **Required**.\r\n\r\n*workspace*: A temporary directory to unpack install tarballs into. Default:\r\n'/root/activemq'\r\n\r\n## activemq::instance parameters\r\n\r\n*title*: The user the ActiveMQ instance runs as\r\n\r\nPlus all of the parameters specified in 'activemq parameters' above\r\n\r\n## Config files and templates\r\n\r\nFiles or templates for each of the ActiveMQ instances can be delivered via\r\nPuppet.  The former are delivered as-is while the latter are processed as ERB\r\ntemplates before being delivered.\r\n\r\nFor example configuration could be delivered using for instances running as the\r\nactivemq1 and activemq2 users with:\r\n\r\n    activemq::config:\r\n      hostname: 'localhost'\r\n\r\n    activemq::files:\r\n      conf/activemq-users.xml:\r\n        source: 'puppet:///files/activemq/dev/activemq-users.xml'\r\n      \r\n    activemq:\r\n      activemq1:\r\n        templates:\r\n          conf/activemq.xml:\r\n            template: '/etc/puppet/templates/activemq/dev1/activemq.xml.erb'\r\n      activemq2:\r\n        templates:\r\n          conf/activemq.xml:\r\n            template: '/etc/puppet/templates/activemq/dev2/activemq.xml.erb'\r\n\r\nValues set at the activemq level as set for all instances so both the activemq1\r\nand activemq2 instance would get the same activemq-users.xml file.  Each\r\ninstance would get their own activemq.xml file based on the template specified\r\nwith instance variables (like basedir and logdir) and config variables (like\r\nhostname above) substituted.\r\n\r\nFor example:\r\n\r\n    <broker ... dataDirectory=\"<%= @basedir %>/data\" persistent=\"false\" ...\r\n    ...\r\n    <transportConnectors>\r\n      <transportConnector name=\"nio\" uri=\"nio://<%= @config['hostname'] %>:61618\"/>\r\n    </transportConnectors>\r\n    ...\r\n\r\nAll files and templates are relative to the product installation.  For example\r\nif the product installation is '/opt/activemq/apache-activemq-5.8.0' then the\r\nfull path to the 'activemq-users.xml' file would be\r\n'/opt/activemq/apache-activemq-5.8.0/conf/activemq-users.xml'.\r\n\r\nNote that the path specified by the 'template' parameter is on the Puppet\r\nmaster.\r\n\r\n## Product zip files\r\n\r\nPlace the product zip files (eg. 'apache-activemq-5.8.0.tar.gz') under a\r\n'activemq' directory of the 'files' file store.  For example if\r\n/etc/puppet/fileserver.conf has:\r\n\r\n    [files]\r\n    path /var/lib/puppet/files\r\n\r\nthen put the zip files in /var/lib/puppet/files/activemq.  Any files specified\r\nwith the 'files' parameter can also be placed in this directory.\r\n\r\n## Monitoring\r\n\r\nThe jolokia parameters enable JMX statistics to be queried over HTTP - for example:\r\n\r\n    $ curl http://localhost:8778/jolokia/read/java.lang:type=Memory/HeapMemoryUsage\r\n    {\"timestamp\":1363883323,\"status\":200,\"request\":{\"mbean\":\"java.lang:type=Memory\"\r\n    ,\" attribute\":\"HeapMemoryUsage\",\"type\":\"read\"},\"value\":{\"max\":1908932608,\"commi\r\n    tted\":1029046272,\"init\":1073741824,\"used\":155889168}}\r\n\r\nTo limit what what can be accessed a jolokia-access.xml can be included in the\r\nwar file.  This is what I do to ensure read-only access:\r\n\r\n    $ cd /var/lib/puppet/files/activemq\r\n    $ wget http://labs.consol.de/maven/repository/org/jolokia/jolokia-jvm/1.1.1/jolokia-jvm-1.1.1-agent.jar\r\n    $ vim jolokia-access.xml\r\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <restrict>\r\n      <commands>\r\n        <command>read</command>\r\n        <command>list</command>\r\n        <command>version</command>\r\n        <command>search</command>\r\n      </commands>\r\n      <http>\r\n        <method>get</method>\r\n        <method>post</method>\r\n      </http>\r\n    </restrict>\r\n    $ zip -u jolokia-jvm-1.1.1-agent.jar jolokia-access.xml\r\n\r\nTo make the ActiveMQ JMX MBeans available it is not necessary to create a JMX\r\nconnector (and not recommended either) but JMX must be enabled - for example:\r\n\r\n    <broker ... useJmx=\"true\" ...>\r\n      ...\r\n      <managementContext>\r\n        <managementContext createConnector=\"false\"/>\r\n      </managementContext>\r\n      ...\r\n    </broker>\r\n\r\nNote that the elements inside broker must be in alphabetical order - for\r\nexample managementContext must be after destinationPolicy but before\r\nsystemUsage.\r\n\r\n## Support\r\n\r\nLicense: Apache License, Version 2.0\r\n\r\nGitHub URL: https://github.com/erwbgy/puppet-activemq\r\n","google":"UA-37513727-1","note":"Don't delete this file! It's used internally to help with page regeneration."}